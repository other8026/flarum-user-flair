{"version":3,"file":"forum.js","mappings":"MACA,IAAIA,EAAsB,CCA1BA,EAAyBC,IACxB,IAAIC,EAASD,GAAUA,EAAOE,WAC7B,IAAOF,EAAiB,QACxB,IAAM,EAEP,OADAD,EAAoBI,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CAAM,ECLdF,EAAwB,CAACM,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDR,EAAwB,CAACc,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFf,EAAyBM,IACH,oBAAXa,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeL,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeL,EAAS,aAAc,CAAEe,OAAO,GAAO,G,qDCL9D,MAAM,EAA+BC,OAAOC,KAAKC,OAAO,c,MCExDC,GAAAA,aAAiBC,IAAI,wBAAwB,WAE7C,ICJA,MAAM,EAA+BJ,OAAOC,KAAKC,OAAO,iBCAlD,EAA+BF,OAAOC,KAAKC,OAAO,0B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,6B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,a,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,yB,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,2B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,6B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,4B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,4B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,4B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,6B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,oB,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,sB,aCOxD,SACE,IAAIG,IAAAA,OAAaC,KACdC,UAAmB,mBACnBA,UAAyB,cCK9BJ,IAAAA,aAAiBC,IAAI,wBAAwB,YAC3CI,EAAAA,EAAAA,QAAOC,IAAc,sBAAsB,SAACC,EAAOC,GAC7CA,EAAKC,mBACPF,EAAMN,IACJ,UAEAS,EAACC,IAAM,CAACC,KAAK,oBAAoBC,QAAS,kBAAMC,MAAM,cAAc,GACjEd,IAAAA,WAAee,MAAM,8DAI9B,KAEAC,EAAAA,EAAAA,UAASC,IAAAA,UAAoB,QAAQ,WAMnC,IAAMC,EAAOC,KAAKC,MAAMF,KAClBV,EAAOU,EAAKV,OAElB,OAAKA,EAWHE,EAAA,OAAKW,UAAU,YACbX,EAAA,MAAIW,UAAU,iBACZX,EAACY,IAAI,CAACC,KAAMvB,IAAAA,MAAUQ,KAAKA,IACxBgB,IAAOhB,EAAM,CAACa,UAAW,oBACzBI,IAAWjB,GACXkB,IAASlB,GACVE,EAAA,QAAMiB,MAAM,cAAcnB,EAAKoB,eAGnClB,EAAA,MAAIW,UAAU,0BAA0BQ,IAAUrB,EAAKsB,SAASC,aAE9Db,EAAKc,YAAcb,KAAKC,MAAMa,aAC9BvB,EAACwB,IAAQ,CAAC1B,KAAMA,EAAMa,UAAU,oBACtBc,wBAAwB,sCAtBpCzB,EAAA,OAAKW,UAAU,YACbX,EAAA,MAAIW,UAAU,iBACXG,IAAOhB,EAAM,CAACa,UAAW,oBAAoB,IAAEK,IAASlB,IAwBnE,GACF,G","sources":["webpack://@other8026/user-flair/webpack/bootstrap","webpack://@other8026/user-flair/webpack/runtime/compat get default export","webpack://@other8026/user-flair/webpack/runtime/define property getters","webpack://@other8026/user-flair/webpack/runtime/hasOwnProperty shorthand","webpack://@other8026/user-flair/webpack/runtime/make namespace object","webpack://@other8026/user-flair/external root \"flarum.core.compat['common/app']\"","webpack://@other8026/user-flair/./src/common/index.ts","webpack://@other8026/user-flair/external root \"flarum.core.compat['common/extend']\"","webpack://@other8026/user-flair/external root \"flarum.core.compat['common/components/Link']\"","webpack://@other8026/user-flair/external root \"flarum.core.compat['forum/components/UserCard']\"","webpack://@other8026/user-flair/external root \"flarum.core.compat['forum/app']\"","webpack://@other8026/user-flair/external root \"flarum.core.compat['common/helpers/avatar']\"","webpack://@other8026/user-flair/external root \"flarum.core.compat['common/helpers/username']\"","webpack://@other8026/user-flair/external root \"flarum.core.compat['common/helpers/userOnline']\"","webpack://@other8026/user-flair/external root \"flarum.core.compat['common/helpers/listItems']\"","webpack://@other8026/user-flair/external root \"flarum.core.compat['forum/utils/UserControls']\"","webpack://@other8026/user-flair/external root \"flarum.core.compat['common/components/Button']\"","webpack://@other8026/user-flair/external root \"flarum.core.compat['forum/components/PostUser']\"","webpack://@other8026/user-flair/external root \"flarum.core.compat['common/extenders']\"","webpack://@other8026/user-flair/external root \"flarum.core.compat['common/models/User']\"","webpack://@other8026/user-flair/./src/forum/extendUser.ts","webpack://@other8026/user-flair/./src/forum/index.tsx"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/app'];","import app from 'flarum/common/app';\n\napp.initializers.add('other8026/user-flair', () => {\n\n});\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Link'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/UserCard'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/avatar'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/username'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/userOnline'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/listItems'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/utils/UserControls'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/PostUser'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extenders'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/models/User'];","/*\nbased on https://github.com/flarum/suspend/blob/main/js/src/forum/extend.ts\n */\n\nimport Extend from 'flarum/common/extenders';\nimport User from 'flarum/common/models/User';\n\nexport default [\n  new Extend.Model(User)\n    .attribute<boolean>('canSetUserFlair')\n    .attribute<String | null>('userFlair')\n];\n","import {extend} from 'flarum/common/extend';\nimport {override} from 'flarum/common/extend';\nimport Link from 'flarum/common/components/Link';\nimport UserCard from 'flarum/forum/components/UserCard';\nimport app from 'flarum/forum/app';\nimport avatar from 'flarum/common/helpers/avatar';\nimport username from 'flarum/common/helpers/username';\nimport userOnline from 'flarum/common/helpers/userOnline';\nimport listItems from 'flarum/common/helpers/listItems';\nimport UserControls from 'flarum/forum/utils/UserControls'\nimport Button from 'flarum/common/components/Button';\nimport PostUser from 'flarum/forum/components/PostUser';\n\nexport {default as extend} from './extendUser';\n\napp.initializers.add('other8026/user-flair', () => {\n  extend(UserControls, 'moderationControls', (items, user) => {\n    if (user.canSetUserFlair()) {\n      items.add(\n        'suspend',\n        // <Button icon=\"fas fa-ban\" onclick={() => app.modal.show(SuspendUserModal, { user })}>\n        <Button icon=\"fas fa-input-text\" onclick={() => alert(\"placeholder\")}>\n          {app.translator.trans('other8026-user-flair.forum.user_controls.set_flair_button')}\n        </Button>\n      );\n    }\n  });\n\n  override(PostUser.prototype, 'view', function () {\n    // flarum doesn't make it easy to modify this part of forum,\n    // so this needs to be copied and pasted from the source,\n    // just need to add the small bit of stuff for the user's flair\n    // https://github.com/flarum/flarum-core/blob/v1.8.0/js/src/forum/components/PostUser.js\n\n    const post = this.attrs.post;\n    const user = post.user();\n\n    if (!user) {\n      return (\n        <div className=\"PostUser\">\n          <h3 className=\"PostUser-name\">\n            {avatar(user, {className: 'PostUser-avatar'})} {username(user)}\n          </h3>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"PostUser\">\n        <h3 className=\"PostUser-name\">\n          <Link href={app.route.user(user)}>\n            {avatar(user, {className: 'PostUser-avatar'})}\n            {userOnline(user)}\n            {username(user)}\n            <span class=\"user-flair\">{user.userFlair()}</span>\n          </Link>\n        </h3>\n        <ul className=\"PostUser-badges badges\">{listItems(user.badges().toArray())}</ul>\n\n        {!post.isHidden() && this.attrs.cardVisible && (\n          <UserCard user={user} className=\"UserCard--popover\"\n                    controlsButtonClassName=\"Button Button--icon Button--flat\"/>\n        )}\n      </div>\n    );\n  });\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","app","add","Extend","User","attribute","extend","UserControls","items","user","canSetUserFlair","m","Button","icon","onclick","alert","trans","override","PostUser","post","this","attrs","className","Link","href","avatar","userOnline","username","class","userFlair","listItems","badges","toArray","isHidden","cardVisible","UserCard","controlsButtonClassName"],"sourceRoot":""}